version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  kafka:
#    image: wurstmeister/kafka:1.0.0
    image: wurstmeister/kafka:1.1.0
    links:
     - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "customer:5:1"
#  apache:
#    build: apache
#    links:
#     - order
#     - shipping
#     - invoicing
#    ports:
#     - "8080:80"
  traefik:
    image: traefik
    build: traefik
   # command: -c /dev/null --web --docker --docker.usebindportip --logLevel=INFO
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mysql:
    build: mysql
    environment:
     MYSQL_ROOT_PASSWORD: "password"
     MYSQL_USER: "dbuser"
     MYSQL_PASSWORD: "dbpass"
    ports:
     - "0.0.0.0:3306:3306"
  customer:
    build: ../microservice-demo-create-customer
    restart: on-failure
    links:
     - kafka
     - mysql
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    #ports:
     # - "0.0.0.0:8080:8080"
    labels:
      - "traefik.backend=customer"
      - "traefik.frontend.rule=Host:docker;PathPrefixStrip:/micro-customer/"
      - "traefik.frontend.entryPoints=http"
      - "traefik.tags=web"
    depends_on:
     - mysql

  rdv:
      build: ../microservice-demo-create-rdv
      restart: on-failure
      links:
       - kafka
       - mysql
      environment:
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      #ports:
       # - "0.0.0.0:8181:8080"
      labels:
        - "traefik.backend=rdv"
        - "traefik.frontend.rule=Host:docker;PathPrefixStrip:/micro-rdv/"
        - "traefik.frontend.entryPoints=http"
        - "traefik.tags=web"
      depends_on:
       - mysql
