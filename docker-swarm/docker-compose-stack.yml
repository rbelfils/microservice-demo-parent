version: '3.4'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - traefik
  kafka:
#    image: wurstmeister/kafka:1.0.0
    image: wurstmeister/kafka:1.1.0
    links:
     - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "customer:5:1"
    networks:
      - traefik
  traefik:
    image: traefik:demo
    #build: traefik
   # command: -c /dev/null --web --docker --docker.usebindportip --docker.swarmmode --logLevel=DEBUG
    command: -c /dev/null --web --docker --docker.swarmmode --logLevel=DEBUG
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - webgateway
      - traefik
  mysql:
    build: mysql
    image: mysql:demo
    environment:
     MYSQL_ROOT_PASSWORD: "password"
     MYSQL_USER: "dbuser"
     MYSQL_PASSWORD: "dbpass"
    ports:
     - "3306:3306"
    networks:
      - traefik
  customer:
    build: ../microservice-demo-create-customer
    image: customer:demo 
    restart: on-failure
    links:
     - kafka
     - mysql
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
     - mysql
    deploy:
      replicas: 1
      labels:
       - "traefik.port=8080"
       - "traefik.backend=customer"
       - "traefik.frontend.rule=Host:docker;PathPrefixStrip:/micro-customer/"
       - "traefik.frontend.entryPoints=http"
       - "traefik.tags=web"
    networks:
      - traefik
  rdv:
    build: ../microservice-demo-create-rdv
    image: rdv:demo
    restart: on-failure
    links:
     - kafka
     - mysql
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    deploy:
      labels:
       - "traefik.port=8080"
       - "traefik.backend=rdv"
       - "traefik.frontend.rule=Host:docker;PathPrefixStrip:/micro-rdv/"
       - "traefik.frontend.entryPoints=http"
       - "traefik.tags=web"
    networks:
      - traefik
    depends_on:
     - mysql
networks:
  webgateway:
    driver: overlay
   # external: true
  traefik:
    driver: overlay
